<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
	    http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
	    default-lazy-init="true">
	
	<description>Spring公共配置</description>
	<!-- <context:property-placeholder location="classpath:config/*.properties" /> -->
	<bean  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations">
	        <array>
	            <value>classpath:config/*.properties</value>
	        </array>
	    </property>
	</bean>
<!-- 	<import resource="classpath:spring-cache/memcache/spring-memcache.xml"></import> -->

	<!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->  

	<!-- redis基础配置 -->
	<!-- <import resource="classpath:i18n/i18n-context.xml"></import> -->
	<!-- redis -->
	<!-- <import resource="classpath:redis/redis-context.xml"></import> -->
	
	

	<!-- 扫描，这里需要排除掉@Controller注解 -->
	<context:component-scan base-package="com.changhong.people">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" /> -->
	</context:component-scan>
	
	

	<!-- 启动对@AspectJ注解的支持 -->
	<!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- <aop:aspectj-autoproxy /> -->

	<!-- 数据库连接池 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
	</bean>
	
	<!-- mybatis：SqlSession工厂类 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath*:com/changhong/people/business/mappers/**/*mapper.xml" />
	</bean>
	<!-- mybatis：DAO映射 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.changhong.people.business.dao.**" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- 事务：事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事务：方式1:注解_使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<!-- 事务：方式2:xml配置 -->
	<!-- <aop:config>
		<aop:pointcut id="systemPointcut" expression="execution(public * com.ybdc.yy.platform**.service.*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="systemPointcut" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="audit*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="login*" propagation="REQUIRED" />
			<tx:method name="regester*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="REQUIRED" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice> -->
	
<!-- =============================调度器============================ -->
<!--   	 <bean id="bicycleStatusTask" class="com.ybdc.yy.platform.business.task.BicycleStatusTask" ></bean> -->
<!--     <bean id="insuranceTask" class="com.ybdc.yy.platform.business.task.InsuranceTask" ></bean>  -->
<!--     <bean id="bicycleFriendsRankingTask" class="com.ybdc.yy.platform.business.task.BicycleFriendsRankingTask" > </bean> -->
<!--     <bean id="endTripTask" class="com.ybdc.yy.platform.business.task.EndTripTask" ></bean>  -->
<!--     <bean id="MonthCardTask" class="com.ybdc.yy.platform.business.task.MonthCardTask" > </bean> -->
<!--     <bean id="userRidingBlackLiftBanTask" class="com.ybdc.yy.platform.business.task.UserRidingBlackLiftBanTask" > </bean> -->
    <!-- 自动结束行程调度器：配置任务线性池   -->
   <!--  <task:executor id="executor" pool-size="10" />  
    <task:scheduler id="scheduler" pool-size="10" /> -->
    
  
   <!--  调度器：启用annotation方式   -->
   <!--  <task:annotation-driven scheduler="scheduler" executor="executor" proxy-target-class="true" /> -->
    
  	<!-- 调度器：启用XML配置方式 -->
   <!--  <task:scheduled-tasks scheduler="scheduler">  
        <task:scheduled ref="bicycleStatusTask" method="bicycleAbnormalJob"  cron="0 */3 * * * ?" fixed-delay=""/>  
        <task:scheduled ref="bicycleStatusTask" method="bicycleLossJob"  cron="0 0 2,16 * * ?" />  
        <task:scheduled ref="bicycleStatusTask" method="bicycleLowsJob"  cron="0 0 0 * * ?" />  
        <task:scheduled ref="bicycleFriendsRankingTask" method="clearAllRidingCountDataJob"  cron="0 0 0 ? * MON" />  
        <task:scheduled ref="endTripTask" method="endTripByAuto"  cron="0 0/10 * * * ?" fixed-rate="" />  
        <task:scheduled ref="insuranceTask" method="autoCreateInsuranceCSVFile"  cron="0 15 03 * * ?" />  
    	<task:scheduled ref="userRidingBlackLiftBanTask" method="liftBanJob"  cron="0 20 0 * * *" />  
    	<task:scheduled ref="monthCardTask" method="generateMonthCardJob"  cron="10 0 0 * * ?" />
    </task:scheduled-tasks>  -->
	
	<!-- <bean id="myTransactionHelper" class="com.ybdc.yy.platform.business.web.controller.demo.MyTransactionHelper" /> -->
	<!-- <bean  class="com.ybdc.yy.base.basis.utils.cache.SpringUtils" /> -->
	
</beans>